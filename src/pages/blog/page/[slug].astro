---
import Pagination from "@components/Pagination.astro";
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";
import { markdownify } from "@lib/utils/textConverter";
import Post from "@partials/Post.astro";
import { getEntryBySlug } from "astro:content";
const { blog_folder } = config.settings;

export async function getStaticPaths() {
  const posts = await getSinglePage(config.settings.blog_folder);
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const { slug } = Astro.params;
const postIndex = await getEntryBySlug<any, string>(blog_folder, "_index");
const posts = await getSinglePage(config.settings.blog_folder);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);
---

<Base title={postIndex?.data.title}>
  <section class="section">
    <div class="container">
      <h1
        class="mb-10 text-center font-normal lg:text-[56px]"
        set:html={markdownify(postIndex?.data.title)}
      />
      <div class="row">
        {
          currentPosts.map((post) => (
            <div class="col-12 mb-8 sm:col-6">
              <Post post={post} />
            </div>
          ))
        }
      </div>
      <Pagination
        section={config.settings.blog_folder}
        totalPages={totalPages}
        currentPage={currentPage}
      />
    </div>
  </section>
</Base>
